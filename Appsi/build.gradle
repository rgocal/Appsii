/*
 *
 *  * Copyright 2015. Appsi Mobile
 *  *
 *  * Licensed under the Apache License, Version 2.0 (the "License");
 *  * you may not use this file except in compliance with the License.
 *  * You may obtain a copy of the License at
 *  *
 *  *     http://www.apache.org/licenses/LICENSE-2.0
 *  *
 *  * Unless required by applicable law or agreed to in writing, software
 *  * distributed under the License is distributed on an "AS IS" BASIS,
 *  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  * See the License for the specific language governing permissions and
 *  * limitations under the License.
 *
 */
buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.14.4'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

android {
    compileSdkVersion 22
    buildToolsVersion '22.0.1'

    defaultConfig {
        applicationId "com.appsimobile.appsii"
        minSdkVersion 17
        targetSdkVersion 22
        versionCode 16
        versionName "beta-0.9.9"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    testOptions.unitTests.returnDefaultValues = true

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    signingConfigs {
        release {
            storeFile file(new File(rootDir, "appsi.keystore"))
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFile getDefaultProguardFile('proguard-android-optimize.txt')
            proguardFile 'rules.pro'
            signingConfig signingConfigs.release
            buildConfigField 'boolean', 'TEST_PURCHASES', 'false'
        }
        debug {
            testCoverageEnabled true
            buildConfigField 'boolean', 'TEST_PURCHASES', 'true'
        }
    }
    productFlavors {
        community {
        }
        google {
        }
    }
    packagingOptions {
        exclude 'LICENSE.txt'
    }
    lintOptions {
        checkReleaseBuilds true
        abortOnError false
    }

}

def props = new Properties()
props.load(new FileInputStream(new File(rootDir, "release.properties")))
android.signingConfigs.release.storePassword = props.keyStorePassword
android.signingConfigs.release.keyAlias = props.keyAlias
android.signingConfigs.release.keyPassword = props.keyAliasPassword

dependencies {
    compile 'com.google.android.gms:play-services:7.5.0'
    compile 'com.android.support:support-v13:22.2.0'
    compile 'com.android.support:gridlayout-v7:22.2.0'
    compile 'com.android.support:recyclerview-v7:22.2.0'
    compile 'com.android.support:palette-v7:22.2.0'
    compile 'com.android.support:cardview-v7:22.2.0'
    compile 'com.android.support:support-annotations:22.2.0'
    compile 'com.googlecode.libphonenumber:libphonenumber:7.0.6'
    compile 'com.googlecode.libphonenumber:geocoder:2.22'
    compile "com.android.support:appcompat-v7:22.2.0"
//    compile 'com.github.japgolly.android:svg-android:2.0.6'
    compile fileTree(dir: 'libs', include: ['*.jar'])

    // TODO: Add this at some point so we can interpret js. The
    // goal of this is to allow users to create modules for toggles
//    compile 'org.mozilla:rhino:1.7R5'
    compile 'com.mcxiaoke.volley:library:1.0.15'
    compile project(':dslv')
    compile project(':paintjob')

    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.0'
    androidTestCompile 'com.android.support.test.espresso:espresso-idling-resource:2.0'
    androidTestCompile 'com.android.support.test:testing-support-lib:0.1'
    androidTestCompile 'org.mockito:mockito-core:1.10.8'
    androidTestCompile 'com.google.dexmaker:dexmaker-mockito:1.1'

    testCompile 'junit:junit:4.12'

    compile('com.crashlytics.sdk.android:crashlytics:2.2.2@aar') {
        transitive = true;
    }
}
